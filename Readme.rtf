{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf160
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Calibri;\f2\fnil\fcharset0 Menlo-Italic;
\f3\fnil\fcharset0 Menlo-Bold;\f4\fnil\fcharset0 Menlo-Regular;\f5\fnil\fcharset0 Menlo-BoldItalic;
}
{\colortbl;\red255\green255\blue255;\red0\green45\blue153;\red56\green110\blue255;\red77\green77\blue77;
\red128\green128\blue128;\red0\green0\blue128;\red102\green14\blue122;\red0\green128\blue0;\red122\green122\blue67;
\red69\green131\blue131;}
\margl1440\margr1440\vieww23060\viewh12620\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 1. Install HomeBrew (brew) Mac OS X package manager:\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf2 ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
\b0 \cf0 \
\
2. Install Node.js via brew:\
\

\b \cf2 brew install node
\b0 \cf0 \
\
Node comes with npm - program and dependency installation tool. But we need to upgrade it as it\'92s updated more frequently than node:\
\

\b \cf2 npm install npm -g
\b0 \cf0  // arba per sudo\
\
4. Install TypeScript dependency module. Pastaba: typescript\'92a instaliuojame globaliai, nes ts failai yra kompiliuojami i js, kuriuos ir deployinsime.\
\

\b \cf2 npm install typescript -g
\b0 \cf0 \
\
Ps. you can check TypeScript version with the command: 
\f1\fs28 \expnd0\expndtw0\kerning0
 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf2 tsc -v
\f0\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \
\
5. Make sure \'93java -version\'94 shows you java 1.7+ installed. If not then install newest java JDK (Not JRE):\
\
http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\
\
\pard\pardeftab720

\f1\fs28 \cf0 \expnd0\expndtw0\kerning0
6. Download Eclipse for PHP development 64 bit\
\
7. Instal nodeEclipse plugin:\'a0{\field{\*\fldinst{HYPERLINK "http://www.nodeclipse.org/updates"}}{\fldrslt \cf3 \expnd0\expndtw0\kerning0
\ul \ulc3 http://www.nodeclipse.org/updates}}/ (drag install icon to Eclipse Menu area)\
\
8. Install typescript plugin: https://github.com/palantir/eclipse-typescript\
\
9. Eclipse ant project spaudziant desini peles, tada properties. Pasirenkame Resource FIlters. Pridedame i exclude *.js failus, *.js.map failus (rekursyviai) ir node_modules direktorija.\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 \kerning1\expnd0\expndtw0 10. Deployment script:\
\
http://superuser.com/questions/299938/how-can-i-recursively-copy-files-by-file-extension-preserving-directory-structu\
\
cd /Users/gytenis/data/AmazonWoods/Projects/Auth/\
find . -name '*.js' -o -name '*.json' | cpio -pdm '/Users/gytenis/data/AmazonWoods/Projects/AuthDeploy';\
\
\
11. TypeScript kompiliatoriaus comandos (tsc) parametras, nurodantis kompiliavimo tipa\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf2 --module CommonJS
\b0 \cf0 \
\
Pastaba2: galima padaryti, kad viskas butu kompiliuojama i viena faila:\
\
--out ServerMain.js\
\
\'97\'97\
\
12. Sukuriam package.json konfiguravimo faila. Naudojamas kaip project description ir dependencies aprasymui. \
\

\b \cf2 npm init
\b0 \cf0 \
\
13. Install hapi framework (and add its reference to package.json):\
\
\pard\pardeftab720

\b \cf2 npm install --save hapi
\b0 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 \'97\'97\'97 Esmines komandos \'97\'97 
\b0 \
\
\

\b 1. Dependecy (package) local install
\b0 : https://docs.npmjs.com/getting-started/installing-npm-packages-locally\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf2 npm install <libo pavadinimas>  --save 
\i\b0 \cf4 // save parametras dar papildomai iraso dependency pavadinima i package.json faila 
\i0 \cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 PS
\b0 . 
\b Global install
\b0 : automatiniams taskams (pvz. naudojant Grunt), tam tikrus paketus reikia installinti globaliai: https://docs.npmjs.com/getting-started/installing-npm-packages-globally\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf2 npm install -g <libo pavadinimas>
\b0 \cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 2. Dependecy remove: 
\b0 https://docs.npmjs.com/cli/uninstall\
\

\b 3. Including Classes and Interfaces. 
\b0 When you define a class or interface in the separate file as type (and of course you want to be able to include that in other files) then at the end you need to add\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f2\i \cf5 // Creating interface and class
\f0\i0 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f3\b \cf6 interface 
\f4\b0 \cf0 UserInterface \{\uc0\u8232 \u8232     
\f3\b \cf7 email 
\f4\b0 \cf0 : 
\f3\b \cf6 string
\f4\b0 \cf0 ;\uc0\u8232 \}\u8232 \u8232 
\f3\b \cf6 class 
\f4\b0 \cf0 UserObject 
\f3\b \cf6 implements 
\f4\b0 \cf0 UserInterface \{\uc0\u8232 \u8232     
\f3\b \cf6 public\uc0\u8232 \u8232 
\f4\b0 \cf0     
\f3\b \cf7 email 
\f4\b0 \cf0 : 
\f3\b \cf6 string
\f4\b0 \cf0 ;\uc0\u8232 \u8232 \u8232     
\f3\b \cf7 private\uc0\u8232 \u8232     
\f2\i\b0 \cf5 // ...\uc0\u8232 
\f4\i0 \cf0 \}\uc0\u8232 \u8232 
\f3\b \cf6 export 
\f4\b0 \cf0 = UserObject; 
\f2\i \cf5 // This will allow to import and use UserObject class inside other files. If we want to be able to use interface then we need to export it also.\
\
// Importing and using this class inside other file - UserModel. Please note, the first line is used for TypeScript compiler. We will need to include this file in many files, therefore maybe it would be convenient to auto insert when new file is created.\

\f4\i0 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f2\i \cf5 /// <reference path="../node.d.ts" />\uc0\u8232 \u8232 
\f3\i0\b \cf6 import 
\f4\b0 \cf0 UserObject = 
\f3\b \cf6 require
\f4\b0 \cf0 (
\f3\b \cf8 '../DataObjects/UserObject'
\f4\b0 \cf0 ); 
\f2\i \cf5 // This will include class signature
\f4\i0 \cf0 \uc0\u8232 \u8232 
\f3\b \cf6 class 
\f4\b0 \cf0 UserModel \{\uc0\u8232 \u8232     
\f3\b \cf6 public\uc0\u8232 \u8232     
\f4\b0 \cf9 getUserDetails\cf0 () : 
\f3\b \cf6 string 
\f4\b0 \cf0 \{\uc0\u8232 \u8232         
\f3\b \cf6 var 
\f4\b0 \cf10 userJsonString \cf0 = 
\f3\b \cf8 '\{"firstName" : "Gytenis", "lastName" : "Mikulenas"\}'
\f4\b0 \cf0 ;\uc0\u8232         
\f3\b \cf6 var 
\f4\b0 \cf10 user \cf0 = 
\f3\b \cf6 new 
\f4\b0 \cf0 UserObject(\cf10 userJsonString\cf0 );\uc0\u8232 \u8232         
\f3\b \cf6 return 
\f4\b0 \cf10 user\cf0 .\cf9 fullname\cf0 ();\uc0\u8232     \}\u8232 \}\u8232 \u8232 
\f3\b \cf6 export 
\f4\b0 \cf0 = UserModel; 
\f2\i \cf5 // Making UserModel class available to include in other files
\f4\i0 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\b \cf0 4. Including objects (functions, arrays and etc) in other files
\b0 . Routes are grouped and defined as arrays of anonymous objects. However, each route group is stored in separate file. In order to be able to use those route arrays in other files, we need to use a slightly different approach:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f2\i \cf5 // This is an example of UserRoute where we define two anonymous objects-routes for handling related requests. Please note we use module.exports instead (see at the end)
\f0\i0 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f2\i \cf5 /// <reference path="../node.d.ts" />\uc0\u8232 \u8232 
\f3\i0\b \cf6 import 
\f4\b0 \cf0 UserModel = 
\f3\b \cf6 require
\f4\b0 \cf0 (
\f3\b \cf8 '../Models/UserModel'
\f4\b0 \cf0 );\uc0\u8232 \u8232 
\f3\b \cf6 var 
\f5\i \cf7 userModel 
\f4\i0\b0 \cf0 = 
\f3\b \cf6 new 
\f4\b0 \cf0 UserModel;\uc0\u8232 \u8232 
\f5\i\b \cf7 module
\f4\i0\b0 \cf0 .
\f3\b \cf7 exports 
\f4\b0 \cf0 = [\uc0\u8232 \u8232     \{ 
\f3\b \cf7 method
\f4\b0 \cf0 : 
\f3\b \cf8 'GET'
\f4\b0 \cf0 , 
\f3\b \cf7 path
\f4\b0 \cf0 : 
\f3\b \cf8 '/users'
\f4\b0 \cf0 , \cf9 handler\cf0 : 
\f3\b \cf6 function 
\f4\b0 \cf0 (request, reply) \{ reply(
\f5\i\b \cf7 userModel
\f4\i0\b0 \cf0 .\cf9 getUserDetails\cf0 ()); \} \},\uc0\u8232     \{ 
\f3\b \cf7 method
\f4\b0 \cf0 : 
\f3\b \cf8 'GET'
\f4\b0 \cf0 , 
\f3\b \cf7 path
\f4\b0 \cf0 : 
\f3\b \cf8 '/users/\{id\}'
\f4\b0 \cf0 , \cf9 handler\cf0 : 
\f3\b \cf6 function 
\f4\b0 \cf0 (request, reply) \{\} \}\uc0\u8232 ];\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f2\i \cf5 // In order to use this array inside another file, we need to use var instead of import \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f3\i0\b \cf6 var 
\f5\i \cf7 userRoute 
\f4\i0\b0 \cf0 = 
\f2\i \cf6 require
\f4\i0 \cf0 (
\f3\b \cf8 './UserRoute'
\f4\b0 \cf0 );\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0 \cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
\
\
\
\
}